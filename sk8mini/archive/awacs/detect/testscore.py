'''
testscore.py - test score.py library
'''

import cv2
import copy
import score
import draw

imagefname = '/home/john/media/webapps/sk8mini/awacs/photos/training/test/test/00095.jpg'
train = [
[1,  88, 526, 20, 18, 8], 
[1,  98,  59, 22, 20, 0],
[1, 199, 417, 19, 19, 9],
[1, 199, 177, 17, 19, 9],
[1, 301, 299, 20, 17, 7],
[1, 407, 185, 22, 19, 9],
[1, 416, 410, 21, 20, 0],
[1, 538, 529, 32, 29, 9],
[1, 540,  55, 26, 25, 5],
[2, 429, 157,  6,  9, 9],
[2, 447, 170, 11, 15, 5],
[2, 458, 125, 12, 13, 3],
[2, 479, 155, 15, 13, 3],
[3, 441, 151, 29, 30, 0] 
]                      
detect_equal = [       
[1,  88, 526, 20, 18, 8], 
[1,  98,  59, 22, 20, 0],
[1, 199, 417, 19, 19, 9],
[1, 199, 177, 17, 19, 9],
[1, 301, 299, 20, 17, 7],
[1, 407, 185, 22, 19, 9],
[1, 416, 410, 21, 20, 0],
[1, 538, 529, 32, 29, 9],
[1, 540,  55, 26, 25, 5],
[2, 429, 157,  6,  9, 9],
[2, 447, 170, 11, 15, 5],
[2, 458, 125, 12, 13, 3],
[2, 479, 155, 15, 13, 3],
[3, 441, 151, 29, 30, 0] 
]                      
detect_close = [       
[1, 104, 537, 23, 21, 1],
[1,  82,  74, 13, 11, 1],
[1, 201, 405, 22, 22, 2],
[1, 209, 177, 17, 19, 9],
[1, 295, 290, 27, 24, 4],
[1, 407, 185, 22, 19, 9],
[1, 416, 418, 21, 20, 0],
[1, 542, 531, 30, 27, 7],
[1, 539,  53, 30, 29, 9],
[2, 427, 159, 10, 13, 3],
[2, 446, 169,  8, 12, 2],
[2, 459, 124, 14, 15, 5],
[2, 483, 155, 18, 16, 6],
[3, 442, 142, 22, 23, 3] 
]                      
                       
detect_testr = [       
[1, 104, 537, 23, 21, 1], 
[1,  82,  74, 13, 11, 1], 
[1, 201, 405, 22, 22, 2], 
[1, 209, 177, 17, 19, 9], 
[1, 295, 290, 27, 24, 4], 
[1, 241, 260, 20, 17, 7], 
[1, 407, 185, 22, 19, 9], 
[1, 416, 418, 21, 20, 0], 
[1, 542, 531, 30, 27, 7], 
[1, 539,  53, 30, 29, 9], 
[2, 427, 159, 10, 13, 3], 
[2, 446, 169,  8, 12, 2], 
[2, 483, 155, 18, 16, 6], 
[3, 442, 142, 22, 23, 3]
]                      
detect_short = [       
[1,  88, 526, 20, 18, 8],
[1,  98,  59, 22, 20, 0],
[1, 199, 417, 19, 19, 9],
[1, 199, 177, 17, 19, 9],
[1, 407, 185, 22, 19, 9],
[1, 416, 410, 21, 20, 0],
[1, 538, 529, 32, 29, 9],
[1, 540,  55, 26, 25, 5],
[2, 429, 157,  6,  9, 9],
[2, 447, 170, 11, 15, 5],
[2, 458, 125, 12, 13, 3],
[2, 479, 155, 15, 13, 3],
[3, 441, 151, 29, 30, 0]
]                      
detect_extra = [       
[1,  88, 526, 20, 18, 8],
[1,  98,  59, 22, 20, 0],
[1, 199, 417, 19, 19, 9],
[1, 199, 177, 17, 19, 9],
[1, 301, 299, 20, 17, 7],
[1, 361, 303, 20, 17, 7],
[1, 407, 185, 22, 19, 9],
[1, 416, 410, 21, 20, 0],
[1, 538, 529, 32, 29, 9],
[1, 540,  55, 26, 25, 5],
[2, 429, 157,  6,  9, 9],
[2, 447, 170, 11, 15, 5],
[2, 458, 125, 12, 13, 3],
[2, 479, 155, 15, 13, 3],
[3, 441, 151, 29, 30, 0]
]

def matchone(name):
	test_train = copy.deepcopy(train)
	test_detect = copy.deepcopy(globals()[name])

	error = score.matchup(test_train,test_detect)
	print(f'{name}: {error}')

def main():
	matchone('detect_equal')
	matchone('detect_close')
	matchone('detect_testr')
	matchone('detect_short')
	matchone('detect_extra')

	img = cv2.imread(imagefname, cv2.IMREAD_UNCHANGED)
	img = draw.drawImage(img, train)
	img = draw.drawImage(img, detect_extra)
	draw.showImage(img)

if __name__ == '__main__':
	main()

