
implement websockets chat server on sam or mai 
implement websockets chat server in portal for getting log, state, map data.  
Learn how to combine webserver and socket server.


nmcli cannot see Tello, but gnome ui can
nmcli cannot see device, but gnome ui can

wifi: JASMINE
wifi: TELLO-591FFC

sleeping  - program running, not connect to tello
wakeup    - connected to tello
awake     - rtf
flying    - takeoff
kill      - emergency stop
landing   - normal completion in progress
stopped   - landed, cortex stopped
shutdown  - stop threads, close sockets



connect to wifi
open cmd socket
command
streamon
open sockets, start threads
rtf
takeoff
flying


asleep  
awake

awake conscious - cortex loop running
sentient - eyes open


monad.cortex.state
asleep - initial state
awake  - loop running
dead   - loop stopped, program ended

monad.eyes.state
eyes state
connect to wifi
open cmd socket
command
streamon
open sockets, start threads
rtf
takeoff
flying

monad.portal.state
connected to JASMINE
connected to TELLO
always connected to localhost
which wifi are we connected to?

------------------------

sudo apt install python3-pip
pip3 install psutil
pip3 install opencv-python
pip3 install python-networkmanager

192.168.1.1  admin/admin   DHCP Server -> Clients List
192.168.1.103:8080

set showmode

disconnect ethernet cable
plugin wifi card
prevent connect to jasmine
force connect to tello

on judson, force priority connect tello, secondary to jasmine

on phone, force priority connect to tello when present



go, land, stop!
go takeoff - land land
capture telem, build map trail data in portal
capture video
	count frames
	detect cones
	fix map
	travel cone to cone



Go - run Tello mission
Emer - abort mission


manual
	poweron tello  - starts wifi hub
	poweron arduno  - ?
	poweron judson  - starts eyes, webmon threads, opens sockets to tello, arduino
	connect phone to tello wifi
	connect phone to browser webmon


the tello exposes a character api to a socket

we could make a arduino program to do the same thing for the skate
	forward 20 cm
	reverse 20 cm
	right 10 degrees
	left 5 degrees
	forward speed 28 kph or cps
	reverse speed 14 kph
	stop


eyes.py  - flies tello missions

eyes.py - continous loop
	read the video feed
	read the telemetry data
	convert to map data
	make adjustments to keep tello in stable hover
	listen for commands to move
	listen for command to stop
	one mission to land on the skate

wheels.py
	keep skate on course and at correct speed
	connect arduino to jetson with usb cable
	talk to arduino via /dev/ttyUSB0, how? socket?
	connect to skateboard:
		rear: stack
			arduino
			jetson
			perfboard, spacers, screws
		center: two linear servos
			battery for arduino
			battery for jetson
			additional weight
		front: tello deck
			paint, tape, pad, carpet
	auduino programming
		api, similar to tello

brain.py
	continous loop
		look at map data
		make decision about next cone
		make decision about speed
		drive the skate
		drive the tello
		check batteries
		check for human input
		make decision to quit


commands sent from brain to wheels
	forward at speed 5 kph
	proceed to cone 8, circle clockwise, enter at 178 degrees, exit at 98 degrees
	increase speed to 30 kph
	slow to 14 kph
	proceed to base
	stop

